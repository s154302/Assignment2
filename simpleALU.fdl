dp simpleALU(in A, B : tc(32);
				in select : ns(2);
				out R : tc(32)) {
	reg R1, R2, R3, R4, R5, R6 : tc(32);
	always{
		R1 = (select == 0) ? (A - B) : 0;
		R2 = (select == 1) ? (B - A) : 0;
		R3 = (select == 2) ? A : 0;
		R4 = (select == 3) ? B : 0;


	}
}

dp testSimpleALU(out A, B:tc(32); out select : ns(2); in R:tc(32)) {
	always{$display($dec, "Cycle:", $cycle, ", A=", A , ", B=", B , ", s=", select , ", R=", R);}
	sfg test_0 { A=3; B=6; select=1; }
	sfg test_1 { A=23; B=17; select=2; }
	sfg test_2 { A=12; B=0; select=0; }
}

// state machine to control testbench
fsm f_testbench(testSimpleALU){
	initial s0; // begin with state s0
	state s1, s2; // other states are: s1, s2
	@s0 (test_0) -> s1; // run test_0 and go to s1
	@s1 (test_1) -> s2; // run test_1 and go to s2
	@s2 (test_2) -> s0; // run test_2 and go to s0
}

system myFirstSystem {
	simpleALU(A, B, select, R);
	testSimpleALU(A, B, select, R);
}