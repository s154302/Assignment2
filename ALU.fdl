dp ALU( in A, B : tc(32);
		in select : ns(3);
		out R : tc(32);
		out N, Z : ns(1)) {

	always{
		R = (select == 0) ? A :
			(select == 1) ? (A + B) :
			(select == 2) ? (A - B) :
			(select == 3) ? A >> 5 : 
								0;

		N = R[31];
		Z = (R==0) ? 1 : 0;

	}
}

dp testALU(out A, B:tc(32); out select : ns(2); in R:tc(32)) {
	always{$display($dec, "Cycle:", $cycle, ", A=", A , ", B=", B , ", s=", select , ", R=", R);}
	sfg test_0 { A=6; B=10; select=1; }
	sfg test_1 { A=23; B=17; select=2; }
	sfg test_2 { A=12; B=4; select=0; }
}

// state machine to control testbench
fsm f_testbench(testALU){
	initial s0; // begin with state s0
	state s1, s2; // other states are: s1, s2
	@s0 (test_0) -> s1; // run test_0 and go to s1
	@s1 (test_1) -> s2; // run test_1 and go to s2
	@s2 (test_2) -> s0; // run test_2 and go to s0
}

system myFirstSystem {
	ALU(A, B, select, R);
	testALU(A, B, select, R);
}
